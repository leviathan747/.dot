set nocompatible                " Use Vim defaults instead of 100% vi compatibility
set backspace=indent,eol,start  " more powerful backspacing

" set up pathogen.vim
execute pathogen#infect()

" jedi setup
autocmd FileType python setlocal completeopt-=preview
let g:jedi#completions_command = "<tab>"
let g:jedi#popup_on_dot = 0
let g:jedi#use_splits_not_buffers = "top"
let g:jedi#smart_auto_mappings = 0
"let g:SuperTabDefaultCompletionType = "context"

syntax on
set novisualbell
set smartindent
set nobackup
set ruler
set background=dark
set hlsearch
set number

set tabstop=2
set shiftwidth=2
set expandtab

" my mappings for window/tab control
map J :5winc +<CR>
map K :5winc -<CR>
map H :vertical resize +5<CR>
map L :vertical resize -5<CR>
map Tn :tabe<CR>
map th :tabn<CR>
map tp :tabp<CR>
map tn :NERDTreeToggle<CR>
map <Tab> <C-w>w
map zz <C-z>

" jump to last location
noremap gl <C-O>

" search for visually selected text
vnoremap // y/<C-R>"<CR>

let NERDTreeIgnore = ['\.pyc$']
"let NERDTreeIgnore += ['\.class$']

" render ejs as html
au BufNewFile,BufRead *.ejs set filetype=html

highlight DiffChange ctermfg=white
highlight DiffText ctermfg=white

"set diffopt=context:1

if has ("autocmd")
    " set wrap for emails at 70, but source code doesn't wrap
    au BufRead   ae*.txt set textwidth=70
    au VimEnter  ae*.txt set lines=36
    "au BufEnter  ae*.txt startinsert
    au BufEnter  ae*.txt set textwidth=70
    au BufLeave  ae*.txt set textwidth=0
    " don't want to expand tabs for makefiles or greenhills build files
    au BufRead   makefile,*.bld set noexpandtab
    au BufEnter  makefile,*.bld set noexpandtab
    au BufLeave  makefile,*.bld set expandtab
    " short width stuff for CVS checkins, so that the edit history
    " doesn't wrap in $Log
    au BufRead   c:/temp/[0-9]\+ set textwidth=70
    au VimEnter  c:/temp/[0-9]\+ set lines=20
    au BufEnter  c:/temp/[0-9]\+ set textwidth=70
    au BufEnter  c:/temp/[0-9]\+ startinsert
    au BufLeave  c:/temp/[0-9]\+ set textwidth=0
endif

if &diff
noremap <space> ]cz.
noremap <S-space> [cz.
windo set foldlevel=999999
execute "normal \<c-w>\<c-w>"
noremap <C-L> :diffupdate<CR><C-L>
endif

" make space get rid of highlighting
nnoremap <silent> <Space> :silent noh<Bar>echo<CR>

" function for note writing
function EngNote()
  :set sw=2
  :set spell
  :execute "normal /  $\<CR>"
endfunction

